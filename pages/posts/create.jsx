import Head from 'next/head'
import { useRouter } from "next/router";
import {
    Box,
    Text,
    Button,
    FormControl,
    FormLabel,
    Input,
    Textarea,
    ButtonGroup,
} from '@chakra-ui/react';

// react query
import { useMutation } from '@tanstack/react-query'

// api
import { addPost } from '../api/postsApi'

// hook form
import { useForm } from "react-hook-form";

// sweetalert
import swal from 'sweetalert'

const CreatePost = () => {

    const router = useRouter();

    const addPostMutation = useMutation(addPost, {
        onSuccess: () => {
            swal({
                title: "Success",
                text: 'Success create a post',
                icon: "success",
            });
            router.push('/posts')
        }
    })

    // Hook Form
    const {
        register,
        handleSubmit,
        formState: { errors, isSubmitting }, }
        = useForm();

    const onSubmit = values => {
        return new Promise((resolve) => {
            setTimeout(() => {
                addPostMutation.mutate({ ...values, userId: 1 })
                resolve()
            }, 1500)
        })
    }

    return (
        <>
            <Head>
                <title>Create Post</title>
                <meta name="description" content="Generated by Informatika Media Pratama" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Box
                padding={5}
            >
                <Text
                    fontSize={'4xl'}
                >
                    Create Post
                </Text>

                <Box mt={10}>
                    <form onSubmit={handleSubmit(onSubmit)}>
                        <FormControl isInvalid={errors.name}>
                            <FormLabel htmlFor='title'>Title</FormLabel>
                            <Input
                                id='title'
                                placeholder='Title'
                                {...register('title', {
                                    required: 'Title is required',
                                    minLength: { value: 4, message: 'Minimum length should be 4' },
                                })}
                            />
                            <Text color={'red'} mt={1}>
                                {errors.title && errors.title.message}
                            </Text>
                        </FormControl>
                        <FormControl isInvalid={errors.name}>
                            <FormLabel htmlFor='body'>Body</FormLabel>
                            <Textarea
                                id='body'
                                placeholder='Lorem ipsum....'
                                {...register('body', {
                                    required: 'Body is required',
                                    minLength: { value: 4, message: 'Minimum length should be 4 characters' },
                                })}
                            />
                            <Text color={'red'} mt={1}>
                                {errors.body && errors.body.message}
                            </Text>
                        </FormControl>

                        <ButtonGroup width={'100%'} mt={4} justifyContent={'space-between'}>
                            <Button colorScheme='blue' isLoading={isSubmitting} type='submit'>
                                Submit Post
                            </Button>
                        </ButtonGroup>
                    </form>
                </Box>
            </Box>
        </>
    )
}

export default CreatePost